plugins {
    // https://github.com/JetBrains/gradle-intellij-plugin
    id 'org.jetbrains.intellij' version '0.6.5'
}

def jdkVersion = '11.0.9'

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.jetbrains.intellij'

    repositories {
        jcenter()
        mavenCentral()
    }

    group 'com.reason'

    sourceCompatibility = jdkVersion
    targetCompatibility = jdkVersion
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    dependencies {
        def powerMockVersion = '2.0.2'
        testCompile 'org.mockito:mockito-core:3.3.3'
        testCompile "org.powermock:powermock-module-junit4:${powerMockVersion}"
        testCompile "org.powermock:powermock-api-mockito2:${powerMockVersion}"
    }

    patchPluginXml {
        sinceBuild = pluginSinceBuild
        untilBuild = pluginUntilBuild
        changeNotes """
        <ul>
            <li>#295 - Parser error: incorrect chaining module/type</li>
            <li>#294 - `let open in` incorrectly parsed</li>
            <li>#291 - 'function' not parsed as function</li>
            <li>Better usage of externalAnnotator to highlight compilation problems in editor</li>
            <li>Better reformatOnSave implementation that should prevent infinite loop</li>
        </ul>

        <p><a href="https://github.com/reasonml-editor/reasonml-idea-plugin/blob/master/CHANGELOG.md">Full change log...</a></p>

        <p/>
        <p>To see how to integrate reason tools (bsc, refmt), go to the website.</p>
    """
    }

    sourceSets {
        main {
            java.srcDirs 'src', 'gen'
            resources.srcDirs 'resources', 'plugins/resources'
        }
        test {
            java.srcDir 'tests'
        }
    }

    version = pluginVersion + '-' + platformVersion

    intellij {
        pluginName = pluginName
        type = platformType
        version = platformVersion
        plugins = [
                'java',
                'JavaScriptLanguage',
                'com.jetbrains.hackathon.indices.viewer:' + indicesVersion,
                'PsiViewer:' + psiVersion
        ]
    }

    idea.module.generatedSourceDirs += file('gen')

    runIde {
        systemProperty 'refmtWidth', '120'
        jvmArgs = [
                '--add-exports=java.base/jdk.internal.vm=ALL-UNNAMED',
                '-Dcompiler.process.debug.port=5005',
                '-Xmx1024m'
        ]
    }

    verifyPlugin {
        pluginDirectory 'resources'
    }

    task testCompilation(type: Test, group: 'Verification', dependsOn: [classes, testClasses]) {
        testLogging {
            exceptionFormat = 'full'
        }
    }
}

dependencies {
    compile project(':jps-plugin')
}
